using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Console;

namespace tinyacc
{
  [Record]
  class Account
  {
    [Accessor] public name    : string;
    [Accessor(flags=WantSetter)] public mutable currency : string;
    [Accessor(flags=WantSetter)] public mutable begin    : double;
    [Accessor(flags=WantSetter)] public mutable credit   : double;
    [Accessor(flags=WantSetter)] public mutable debit    : double;
    
    public End : double
    {
      get
      {
        begin + credit - debit
      }
    }
  }
  
  class Accounts
  {
    private accounts : List[Account] = List.[Account]();
    
    public Add(acc : Ast.Account) : void
    {
      def a = Find(acc.Name);
      if (a != null)
      {
        a.Currency = acc.Currency;
        a.Begin    = acc.Balance;
        a.Credit   = 0;
        a.Debit    = 0;
      }
      else
        accounts.Add(Account(acc.Name, acc.Currency, acc.Balance, 0.0, 0.0));
    }
    
    private Find(name : string) : Account
    {
      accounts.Find(x => x.Name.EqualString(name))
    }
    
    public DebitOrCredit(operation : Ast.Operation, conv : CurrencyConverter) : void
    {
      def acc = Find(operation.AccountName);
      
      when (acc == null)
        throw AccException($"Can't find account $(operation.AccountName)", operation);
      
      def course = conv.Get(acc.Currency, operation.Currency, operation);
      
      match(operation.OperationType)
      {
        | Debit  => acc.Debit  += operation.Amount * course;
        | Credit => acc.Credit += operation.Amount * course;
      }
    }
    
    public Print() : void
    {
      WriteLine("");
      WriteLine("Results");
      WriteLine("--------------------");
      foreach (acc in accounts)
        WriteLine(String.Format("{0,5} {1,3}   begin:{2,5}   credit:{3,5}   debit:{4,5}   end:{5,5}",
          acc.Name, acc.Currency, 
          Convert.ToInt32(acc.Begin), Convert.ToInt32(acc.Credit),
          Convert.ToInt32(acc.Debit), Convert.ToInt32(acc.End)));
    }
  }
}
