using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Console;

namespace tinyacc
{
  [Record]
  class LevelOne
  {
    [Accessor] public name    : string;
    [Accessor] public currency : string;
    [Accessor(flags=WantSetter)] public mutable credit   : double;
    [Accessor(flags=WantSetter)] public mutable debit    : double;
  }

  class LevelOneGrouping
  {
    private items : List[LevelOne] = List.[LevelOne]();

    private Find(name : string, currency : string) : LevelOne
    {
      items.Find(x => x.Name.EqualString(name) && x.Currency.EqualString(currency))
    }

    public DebitOrCredit(operation : Ast.Operation) : void
    {
      mutable item = Find(operation.Name, operation.Currency);
      when (item == null)
      {
        item = LevelOne(operation.Name, operation.Currency, 0, 0);
        items.Add(item);
      }
      
      match(operation.OperationType)
      {
        | Debit  => item.Debit  += operation.Amount;
        | Credit => item.Credit += operation.Amount;
      }
    }
    
    public Print() : void
    {
      WriteLine("Level 1 grouping");
      WriteLine("--------------------");
      
      def nameLen = items.FoldLeft(0, (x, len) => Math.Max(x.Name.Length, len));
      
      foreach (item in items)
        WriteLine(String.Format($"{0,$(nameLen + 3)} {1,3}   credit:{2,5}   debit:{3,5}",
          item.Name, item.Currency, Convert.ToInt32(item.Credit), Convert.ToInt32(item.Debit)));
    }
  }
}
